<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bingo Prompt Generator 4x4</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.2em;
            opacity: 0.9;
        }

        .form-container {
            padding: 40px;
        }

        .form-group {
            margin-bottom: 30px;
        }

        .form-group label {
            display: block;
            font-weight: bold;
            margin-bottom: 8px;
            color: #333;
            font-size: 1.1em;
        }

        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 1em;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 10px rgba(102, 126, 234, 0.3);
        }

        .form-group textarea {
            height: 200px;
            resize: vertical;
        }

        .grid-size-selector {
            display: flex;
            gap: 15px;
            margin-top: 10px;
        }

        .grid-option {
            flex: 1;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            cursor: pointer;
            text-align: center;
            transition: all 0.3s ease;
            background: white;
        }

        .grid-option:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .grid-option.selected {
            border-color: #667eea;
            background: #f8f9ff;
            color: #667eea;
            font-weight: bold;
        }

        .grid-option h4 {
            margin-bottom: 5px;
            font-size: 1.2em;
        }

        .grid-option small {
            color: #666;
            font-size: 0.9em;
        }

        .generate-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 20px 40px;
            border-radius: 50px;
            font-size: 1.2em;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            display: block;
            margin: 30px auto;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }

        .generate-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 40px rgba(102, 126, 234, 0.4);
        }

        .generate-btn:active {
            transform: translateY(-1px);
        }

        .results {
            display: none;
            margin-top: 40px;
            border-top: 2px solid #e0e0e0;
            padding-top: 40px;
        }

        .prompt-result {
            margin-bottom: 40px;
        }

        .prompt-result h3 {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 20px;
            border-radius: 10px 10px 0 0;
            margin-bottom: 0;
            font-size: 1.3em;
        }

        .prompt-content {
            background: #f8f9fa;
            border: 2px solid #e0e0e0;
            border-radius: 0 0 10px 10px;
            padding: 20px;
            position: relative;
        }

        .prompt-text {
            font-family: 'Courier New', monospace;
            font-size: 0.9em;
            line-height: 1.6;
            white-space: pre-wrap;
            background: white;
            padding: 20px;
            border-radius: 5px;
            border: 1px solid #ddd;
            max-height: 400px;
            overflow-y: auto;
        }

        .copy-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            background: #28a745;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9em;
            transition: all 0.3s ease;
        }

        .copy-btn:hover {
            background: #218838;
        }

        .copy-btn.copied {
            background: #17a2b8;
        }

        .word-count {
            margin-top: 10px;
            color: #666;
            font-size: 0.9em;
        }

        .requirement-info {
            background: #e3f2fd;
            border: 1px solid #2196f3;
            border-radius: 8px;
            padding: 15px;
            margin-top: 10px;
        }

        .requirement-info strong {
            color: #1976d2;
        }

        @media (max-width: 768px) {
            .container {
                margin: 10px;
                border-radius: 15px;
            }
            
            .form-container {
                padding: 20px;
            }
            
            .header {
                padding: 20px;
            }
            
            .header h1 {
                font-size: 2em;
            }
            
            .grid-size-selector {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéØ Bingo Prompt Generator</h1>
            <p>‡∏™‡∏£‡πâ‡∏≤‡∏á Prompt ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏° Bingo ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö 3x3 ‡πÅ‡∏•‡∏∞ 4x4)</p>
            <p style="margin-top: 10px; font-size: 1em; opacity: 0.8;">‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ ‡∏Ñ‡∏£‡∏π‡∏ô‡∏ô‡∏ó‡∏û‡∏±‡∏ó‡∏ò‡πå ‡∏´‡∏¥‡∏£‡∏±‡∏ç‡πÄ‡∏£‡∏∑‡∏≠‡∏á</p>
        </div>

        <div class="form-container">
            <form id="bingoForm">
                <div class="form-group">
                    <label for="gridSize">üìê ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á Bingo:</label>
                    <div class="grid-size-selector">
                        <div class="grid-option" data-size="3x3" onclick="selectGridSize('3x3')">
                            <h4>3√ó3</h4>
                            <small>9 ‡∏ä‡πà‡∏≠‡∏á - ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡πá‡∏Å‡πÄ‡∏•‡πá‡∏Å</small>
                        </div>
                        <div class="grid-option selected" data-size="4x4" onclick="selectGridSize('4x4')">
                            <h4>4√ó4</h4>
                            <small>16 ‡∏ä‡πà‡∏≠‡∏á - ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô</small>
                        </div>
                        <div class="grid-option" data-size="5x5" onclick="selectGridSize('5x5')">
                            <h4>5√ó5</h4>
                            <small>25 ‡∏ä‡πà‡∏≠‡∏á - ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà</small>
                        </div>
                    </div>
                    <input type="hidden" id="selectedGridSize" value="4x4">
                </div>

                <div class="form-group">
                    <label for="gameName">üéÆ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏° Bingo:</label>
                    <input type="text" id="gameName" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏î‡πâ‡∏≠‡∏∞‡πÑ‡∏£, ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡∏¢, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß" required>
                </div>

                <div class="form-group">
                    <label for="organization">üè¢ ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£/‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ):</label>
                    <input type="text" id="organization" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏ô‡∏≤, ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó XYZ, ‡∏ä‡∏°‡∏£‡∏° ABC">
                </div>

                <div class="form-group">
                    <label for="logoUrl">üñºÔ∏è URL ‡πÇ‡∏•‡πÇ‡∏Å‡πâ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ):</label>
                    <input type="url" id="logoUrl" placeholder="https://example.com/logo.png">
                </div>

                <div class="form-group">
                    <label for="vocabulary">üìù ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡πà‡∏ô (‡πÅ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î):</label>
                    <textarea id="vocabulary" placeholder="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏•‡πá‡∏≠‡∏Å
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏û‡∏•‡∏á
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏™‡∏≤‡∏£‡∏Ñ‡∏î‡∏µ
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡∏≠‡∏≤‡∏£‡∏µ‡πà
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô" required></textarea>
                    <div class="word-count" id="wordCount">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥: 0</div>
                    <div class="requirement-info" id="requirementInfo">
                        <strong>‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î:</strong> ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ <span id="minWords">16</span> ‡∏Ñ‡∏≥ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á <span id="gridSizeDisplay">4√ó4</span>
                    </div>
                </div>

                <div class="form-group">
                    <label for="colorScheme">üé® ‡πÇ‡∏ó‡∏ô‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:</label>
                    <input type="text" id="colorScheme" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡πâ‡∏≤‡πÄ‡∏á‡∏¥‡∏ô-‡∏Ç‡∏≤‡∏ß-‡∏ó‡∏≠‡∏á, ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß-‡∏ô‡πâ‡∏≤‡πÄ‡∏á‡∏¥‡∏ô-‡∏Ç‡∏≤‡∏ß, ‡∏°‡πà‡∏ß‡∏á-‡∏ü‡πâ‡∏≤-‡∏ä‡∏°‡∏û‡∏π" required>
                    <small style="color: #666; font-size: 0.9em; margin-top: 5px; display: block;">
                        üí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÅ‡∏î‡∏á-‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á-‡∏™‡πâ‡∏°, ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß-‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•-‡∏ü‡πâ‡∏≤, ‡πÄ‡∏ó‡∏≤-‡∏ô‡πâ‡∏≤‡πÄ‡∏á‡∏¥‡∏ô-‡∏î‡∏≥
                    </small>
                </div>

                <div class="form-group">
                    <label for="developerCredit">üë®‚Äçüè´ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ):</label>
                    <input type="text" id="developerCredit" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢‡∏Ñ‡∏£‡∏π‡∏™‡∏°‡∏ä‡∏≤‡∏¢, ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏Ñ‡∏£‡∏π‡∏°‡∏≤‡∏•‡∏µ ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏ô‡∏≤">
                    <small style="color: #666; font-size: 0.9em; margin-top: 5px; display: block;">
                        üí° ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° Bingo
                    </small>
                </div>

                <button type="button" class="generate-btn" onclick="generatePrompts()">üöÄ ‡∏™‡∏£‡πâ‡∏≤‡∏á Prompt</button>
            </form>

            <div class="results" id="results">
                <div class="prompt-result">
                    <h3>üéØ Prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á Bingo Card</h3>
                    <div class="prompt-content">
                        <button class="copy-btn" onclick="copyToClipboard('bingoCardPrompt')">‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å</button>
                        <div class="prompt-text" id="bingoCardPrompt"></div>
                    </div>
                </div>

                <div class="prompt-result">
                    <h3>üé≤ Prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå</h3>
                    <div class="prompt-content">
                        <button class="copy-btn" onclick="copyToClipboard('randomSystemPrompt')">‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å</button>
                        <div class="prompt-text" id="randomSystemPrompt"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Grid size requirements
        const gridRequirements = {
            '3x3': { slots: 9, description: '3√ó3' },
            '4x4': { slots: 16, description: '4√ó4' },
            '5x5': { slots: 25, description: '5√ó5' }
        };

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Page loaded successfully');
            
            // Word counter
            const vocabularyInput = document.getElementById('vocabulary');
            if (vocabularyInput) {
                vocabularyInput.addEventListener('input', function() {
                    updateWordCount();
                });
            }

            // Initialize word count display
            updateWordCount();
        });

        function selectGridSize(size) {
            // Remove selected class from all options
            document.querySelectorAll('.grid-option').forEach(option => {
                option.classList.remove('selected');
            });
            
            // Add selected class to clicked option
            document.querySelector(`[data-size="${size}"]`).classList.add('selected');
            
            // Update hidden input
            document.getElementById('selectedGridSize').value = size;
            
            // Update requirement info
            updateRequirementInfo(size);
            
            // Update word count
            updateWordCount();
        }

        function updateRequirementInfo(size) {
            const requirement = gridRequirements[size];
            document.getElementById('minWords').textContent = requirement.slots;
            document.getElementById('gridSizeDisplay').textContent = requirement.description;
        }

        function updateWordCount() {
            const vocabulary = document.getElementById('vocabulary').value.trim();
            const lines = vocabulary ? vocabulary.split('\n').filter(line => line.trim().length > 0) : [];
            const gridSize = document.getElementById('selectedGridSize').value;
            const requirement = gridRequirements[gridSize];
            
            const wordCountElement = document.getElementById('wordCount');
            wordCountElement.textContent = `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥: ${lines.length}`;
            
            // Change color based on requirement
            if (lines.length >= requirement.slots) {
                wordCountElement.style.color = '#28a745'; // Green
            } else {
                wordCountElement.style.color = '#dc3545'; // Red
            }
        }

        function generatePrompts() {
            console.log('generatePrompts function called');
            
            try {
                const gameName = document.getElementById('gameName').value.trim();
                const organization = document.getElementById('organization').value.trim();
                const logoUrl = document.getElementById('logoUrl').value.trim();
                const vocabulary = document.getElementById('vocabulary').value.trim();
                const colorScheme = document.getElementById('colorScheme').value.trim();
                const developerCredit = document.getElementById('developerCredit').value.trim();
                const gridSize = document.getElementById('selectedGridSize').value;

                console.log('Input values:', { gameName, organization, logoUrl, vocabulary, colorScheme, developerCredit, gridSize });

                // Validate input
                if (!gameName) {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏° Bingo');
                    return;
                }

                if (!vocabulary) {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå');
                    return;
                }

                if (!colorScheme) {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏ó‡∏ô‡∏™‡∏µ');
                    return;
                }

                // Split by lines
                const vocabularyList = vocabulary.split('\n').map(word => word.trim()).filter(word => word.length > 0);
                const requirement = gridRequirements[gridSize];
                
                console.log('Vocabulary list:', vocabularyList);
                
                if (vocabularyList.length < requirement.slots) {
                    alert(`‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ ${requirement.slots} ‡∏Ñ‡∏≥ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á ${requirement.description} (‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏°‡∏µ ${vocabularyList.length} ‡∏Ñ‡∏≥)`);
                    return;
                }

                // Generate prompts
                const bingoCardPrompt = generateBingoCardPrompt(gameName, organization, logoUrl, vocabularyList, colorScheme, developerCredit, gridSize);
                const randomSystemPrompt = generateRandomSystemPrompt(gameName, vocabularyList, colorScheme, developerCredit);

                console.log('Prompts generated successfully');

                // Display results
                const bingoCardElement = document.getElementById('bingoCardPrompt');
                const randomSystemElement = document.getElementById('randomSystemPrompt');
                const resultsElement = document.getElementById('results');

                if (bingoCardElement && randomSystemElement && resultsElement) {
                    bingoCardElement.textContent = bingoCardPrompt;
                    randomSystemElement.textContent = randomSystemPrompt;
                    resultsElement.style.display = 'block';

                    // Scroll to results
                    resultsElement.scrollIntoView({ behavior: 'smooth' });
                    console.log('Results displayed successfully');
                } else {
                    console.error('Could not find result elements');
                    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•');
                }

            } catch (error) {
                console.error('Error in generatePrompts:', error);
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
            }
        }

        function generateBingoCardPrompt(gameName, organization, logoUrl, vocabularyList, colorScheme, developerCredit, gridSize) {
            const orgText = organization ? organization : '[‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£]';
            const logoText = logoUrl ? logoUrl : '[URL ‡πÇ‡∏•‡πÇ‡∏Å‡πâ]';
            const requirement = gridRequirements[gridSize];
            const gridDescription = requirement.description;
            const slots = requirement.slots;
            
            return `‡∏™‡∏£‡πâ‡∏≤‡∏á Bingo Card ‡πÅ‡∏ö‡∏ö Interactive ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö${organization ? organization : '‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£'} ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ "${gameName}" 
‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏ö‡∏ö Single Page Application (SPA) ‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ:

1. ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå (‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞):
   ‚ñ™ Header ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°:
     - ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡∏ç‡πà "${gameName}"
     - ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏£‡∏≠‡∏á "${orgText}" (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
     - ‡∏ò‡∏µ‡∏°‡∏™‡∏µ: ${colorScheme}
     - ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° gradient
   ‚ñ™ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå ${vocabularyList.length} ‡∏Ñ‡∏≥: ${vocabularyList.join(', ')}
   
   ‚ñ™ ‡∏£‡∏∞‡∏ö‡∏ö Drag & Drop ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á:
     - ‡∏•‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏à‡∏≤‡∏Å‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á ${gridDescription} ‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤
     - ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏≤‡∏Å‡∏Ñ‡∏≥‡πÉ‡∏™‡πà‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‚Üí ‡∏Ñ‡∏≥‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≤‡∏¢ (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡πâ‡∏≥)
     - ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‚Üí ‡∏Ñ‡∏≥‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≤‡∏¢
     - ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏°‡∏µ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ hover ‡πÅ‡∏•‡∏∞ shadow ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
   
   ‚ñ™ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á ${gridDescription} (${slots} ‡∏ä‡πà‡∏≠‡∏á):
     - Drop zone ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏≠‡∏ö dotted
     - ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏•‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà" ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏á
     - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå
   
   ‚ñ™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÄ‡∏ï‡πá‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á):
     - ‡∏õ‡∏∏‡πà‡∏° "‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥" ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà ‡∏™‡∏µ‡∏™‡∏±‡∏ô‡∏™‡∏î‡πÉ‡∏™
     - ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‚Üí ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏° 2-3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‚Üí ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏≥‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á ${slots} ‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
     - ‡∏™‡∏∏‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${vocabularyList.length} ‡∏Ñ‡∏≥ ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
     - ‡∏´‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á ‚Üí ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô ‚Üí ‡∏à‡∏∂‡∏á‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏ï‡πá‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á
     - ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ö Sequential: ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢ animation delay
     - ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå..." ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏∏‡πà‡∏°
   
   ‚ñ™ ‡∏ï‡∏±‡∏ß‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:
     - "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß X/${slots}" ‡πÅ‡∏ö‡∏ö progress bar
     - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏ï‡∏≤‡∏° progress (‡πÅ‡∏î‡∏á ‚Üí ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á ‚Üí ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß)
   
   ‚ñ™ ‡∏õ‡∏∏‡πà‡∏° "‡∏™‡∏£‡πâ‡∏≤‡∏á Bingo Card" (‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏ö ${slots} ‡∏Ñ‡∏≥)

3. ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏≠‡∏á - ‡πÄ‡∏•‡πà‡∏ô Bingo (‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á):
   ‚ñ™ ‡∏Å‡∏≤‡∏£‡πå‡∏î Bingo ${gridDescription} ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:
     - ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥ ‚Üí ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡πÄ‡∏õ‡πá‡∏ô "‡∏ó‡∏≥‡πÅ‡∏•‡πâ‡∏ß" + ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ ‚úÖ
     - ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚Üí ‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏Å‡∏ï‡∏¥ (toggle on/off)
   
   ‚ñ™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ Bingo ‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞:
     - ‡∏ï‡∏£‡∏ß‡∏à‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô ${gridDescription.split('√ó')[0]} ‡πÅ‡∏ñ‡∏ß
     - ‡∏ï‡∏£‡∏ß‡∏à‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á ${gridDescription.split('√ó')[1]} ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå  
     - ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡πÅ‡∏¢‡∏á‡∏°‡∏∏‡∏° 2 ‡πÄ‡∏™‡πâ‡∏ô
     - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏™‡πâ‡∏ô Highlight ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Bingo (‡∏™‡∏µ‡∏ó‡∏≠‡∏á ‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á)
   
   ‚ñ™ Modal ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£ Bingo:
     - ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á overlay
     - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ + ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ confetti
     - ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏∞ (‡πÅ‡∏ñ‡∏ß/‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå/‡∏ó‡πÅ‡∏¢‡∏á)
     - ‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠" ‚Üí ‡∏õ‡∏¥‡∏î modal ‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏Å‡∏°
     - ‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà" ‚Üí ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
   
   ‚ñ™ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á:
     - ‡∏´‡∏•‡∏±‡∏á Bingo ‡πÅ‡∏£‡∏Å ‚Üí ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ ‚úÖ ‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà
     - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥ Bingo ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 2, 3, 4... ‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ
     - ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà Bingo "Bingo ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà X"
     - ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
   
   ‚ñ™ ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•:
     - Counter ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Bingo ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÑ‡∏î‡πâ
     - Progress ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ "X/${slots} ‡∏ä‡πà‡∏≠‡∏á"
     - ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô (Timer)${developerCredit ? `\n     - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï: "${developerCredit}"` : ''}

‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:
- ‡πÑ‡∏°‡πà‡∏°‡∏µ scroll ‡πÉ‡∏ä‡πâ hide/show ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
- Responsive design ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πá‡∏ï
- ‡πÉ‡∏ä‡πâ HTML5 Drag & Drop API ‡∏û‡∏£‡πâ‡∏≠‡∏° touch support
- Modal system ‡∏î‡πâ‡∏ß‡∏¢ CSS/JavaScript
- ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ animation ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° ‡∏°‡∏µ transitions
- ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏°‡∏µ shadow ‡πÅ‡∏•‡∏∞ border
- ‡∏ò‡∏µ‡∏°‡∏™‡∏µ: ${colorScheme}
- Visual feedback ‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö
- Local storage ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
- Sound effects ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Bingo (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ)`;
        }

        function generateRandomSystemPrompt(gameName, vocabularyList, colorScheme, developerCredit) {
            return `‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥ ${gameName} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏° Bingo ‡∏ó‡∏µ‡πà‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏ô‡πà‡∏≤‡∏•‡∏∏‡πâ‡∏ô ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢:

1. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á gradient ‡∏™‡∏µ${colorScheme}
2. ‡∏õ‡∏∏‡πà‡∏° "‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥${gameName}" ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà ‡∏™‡∏µ‡∏™‡∏±‡∏ô‡∏™‡∏î‡πÉ‡∏™ ‡∏°‡∏µ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á
3. ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ:
   - ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô (spinning) ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
   - ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
   - ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ‡πÅ‡∏™‡∏á‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö ‡∏£‡∏≠‡∏ö‡πÜ ‡∏Å‡∏•‡πà‡∏≠‡∏á
   - ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°

4. ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏±‡πâ‡∏á ${vocabularyList.length} ‡∏Ñ‡∏≥:
   ${vocabularyList.join(', ')}

5. ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©:
   - ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ (‡∏ñ‡πâ‡∏≤‡∏ó‡∏≥‡πÑ‡∏î‡πâ)
   - ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°
   - ‡∏õ‡∏∏‡πà‡∏° "‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
   - ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ 5 ‡∏Ñ‡∏≥‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
   - ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ã‡πâ‡∏≥‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏Ñ‡∏£‡∏ö‡∏£‡∏≠‡∏ö
   - ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠${developerCredit ? `\n   - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï: "${developerCredit}"` : ''}

6. ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö:
   - Responsive design ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
   - Smooth animations ‡πÅ‡∏•‡∏∞ transitions
   - Particles effect ‡∏´‡∏£‡∏∑‡∏≠ confetti ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ
   - ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏°‡∏µ shadow ‡πÅ‡∏•‡∏∞ border
   - ‡∏ò‡∏µ‡∏°‡∏™‡∏µ: ${colorScheme}
   - Visual feedback ‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö

7. ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:
   - ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏∏‡πà‡∏° ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ‡πÇ‡∏´‡∏•‡∏î 2-3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
   - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°
   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ã‡πâ‡∏≥‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
   - ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
   - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å Bingo Card ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏π/‡∏ú‡∏π‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô`;
        }

        function copyToClipboard(elementId) {
            const element = document.getElementById(elementId);
            const text = element.textContent;
            
            navigator.clipboard.writeText(text).then(() => {
                const btn = element.parentElement.querySelector('.copy-btn');
                const originalText = btn.textContent;
                btn.textContent = '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß!';
                btn.classList.add('copied');
                
                setTimeout(() => {
                    btn.textContent = originalText;
                    btn.classList.remove('copied');
                }, 2000);
            }).catch(err => {
                // Fallback for older browsers
                const textArea = document.createElement('textarea');
                textArea.value = text;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                
                const btn = element.parentElement.querySelector('.copy-btn');
                btn.textContent = '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß!';
                setTimeout(() => {
                    btn.textContent = '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å';
                }, 2000);
            });
        }
    </script>
</body>
</html>
